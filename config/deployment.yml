apiVersion: apps/v1
kind: Deployment
metadata:
  name: johannes
  labels:
    app: johannes
spec:
  replicas: 2
  selector:
    matchLabels:
      app: johannes
  strategy:
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 1
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: johannes
    spec:
      restartPolicy: Always
      dnsPolicy: ClusterFirst
      containers:
        - name: johannes
          image: <IMAGE>
          ports:
            - containerPort: 3000
              protocol: TCP
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              cpu: 100m
              memory: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: johannes-service
  annotations:
    service.beta.kubernetes.io/do-loadbalancer-protocol: 'http'
    service.beta.kubernetes.io/do-loadbalancer-healthcheck-path: '/health'
    service.beta.kubernetes.io/do-loadbalancer-healthcheck-check-interval-seconds: '3'
    service.beta.kubernetes.io/do-loadbalancer-healthcheck-response-timeout-seconds: '5'
    service.beta.kubernetes.io/do-loadbalancer-healthcheck-unhealthy-threshold: '3'
    service.beta.kubernetes.io/do-loadbalancer-healthcheck-healthy-threshold: '5'
spec:
  type: LoadBalancer
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 3000
  sessionAffinity: None
  type: NodePort
  selector:
    app: johannes
